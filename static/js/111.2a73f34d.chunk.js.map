{"version":3,"file":"static/js/111.2a73f34d.chunk.js","mappings":"wVAqFA,MApEA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAUD,OACE,kBAAMC,SATa,SAAAC,GACnBA,EAAMC,iBAENb,GAASc,EAAAA,EAAAA,IAAW,CAAEX,MAAAA,EAAOE,SAAAA,KAC7BD,EAAS,IACTE,EAAY,GACb,EAG+BS,aAAa,MAA3C,WACE,SAAC,IAAD,CAASC,GAAIC,EAAAA,GAAb,qBACA,UAAC,KAAD,YACE,SAAC,IAAD,CAAWD,GAAIE,EAAAA,GAAf,oBACA,UAAC,IAAD,CAAYF,GAAIG,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBH,GAAII,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIC,EAAAA,IAASC,MAAM,uBAE3B,SAAC,EAAAC,EAAD,CACEC,QAAQ,SACRC,KAAK,QACLjB,KAAK,QACLC,MAAOP,EACPwB,SAAUpB,EACVqB,UAAQ,WAKd,UAAC,KAAD,YACE,SAAC,IAAD,CAAWZ,GAAIE,EAAAA,GAAf,uBACA,UAAC,IAAD,CAAYF,GAAIG,EAAAA,GAAWU,aAAa,SAAxC,WACE,SAAC,IAAD,CAAkBb,GAAII,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIS,EAAAA,IAAoBP,MAAM,uBAEtC,SAAC,EAAAC,EAAD,CACEC,QAAQ,SACRC,KAAK,WACLjB,KAAK,WACLC,MAAOL,EACPsB,SAAUpB,EACVqB,UAAQ,WAKd,SAAC,IAAD,CAAQH,QAAQ,QAAQC,KAAK,SAA7B,qBAKL,EC3ED,MANA,WACI,OACE,SAAC,EAAD,GAEL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import {\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { useDispatch } from 'react-redux';\nimport { loginAsync } from 'redax/auth/authOperations';\nimport { MdEmail } from 'react-icons/md';\nimport { formHeader, formLabel, hoverIcon, inputLeftEl } from 'theme';\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(loginAsync({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Heading sx={formHeader}>Log in</Heading>\n      <FormControl>\n        <FormLabel sx={formLabel}>Email</FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={MdEmail} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </InputGroup>\n      </FormControl>\n\n      <FormControl>\n        <FormLabel sx={formLabel}>Password</FormLabel>\n        <InputGroup sx={hoverIcon} alignContent='center'>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={RiLockPasswordFill} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </InputGroup>\n      </FormControl>\n\n      <Button variant=\"myBtn\" type=\"submit\">\n        Login\n      </Button>\n    </form>\n  );\n}\n\nexport default LoginForm;\n","import LoginForm from \"components/LoginForm/LoginForm\";\n\nfunction Login() {\n    return (\n      <LoginForm/>\n    )\n}\n\nexport default Login;"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","event","preventDefault","loginAsync","autoComplete","sx","formHeader","formLabel","hoverIcon","inputLeftEl","as","MdEmail","color","I","variant","type","onChange","required","alignContent","RiLockPasswordFill"],"sourceRoot":""}