{"version":3,"file":"static/js/236.cbda7921.chunk.js","mappings":"yKASA,IANA,YAAoC,IAAZA,EAAW,EAAXA,SACpB,OACI,SAAC,IAAD,CAAWC,GAAIC,EAAAA,GAAf,SAA2BF,GAElC,C,+QCuGD,MAzFA,WACE,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAWD,OACE,SAACC,EAAA,EAAD,WACA,kBAAMC,SAXa,SAAAC,GACnBA,EAAMC,iBAENf,GAASgB,EAAAA,EAAAA,IAAc,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACtCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAI+BS,aAAa,MAA3C,WACE,SAAC,IAAD,CAASnB,GAAIoB,EAAAA,GAAb,uBACA,UAAC,KAAD,YACE,SAAC,IAAD,CAAWpB,GAAIqB,EAAAA,GAAf,mBACA,UAAC,IAAD,CAAYrB,GAAIsB,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBtB,GAAIuB,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIC,EAAAA,IAAkBC,MAAM,uBAEpC,SAAC,EAAAC,EAAD,CACEC,QAAQ,SACRC,KAAK,OACLxB,KAAK,OACLQ,MAAOR,EACPyB,SAAUnB,WAKhB,UAAC,KAAD,YACE,SAAC,IAAD,CAAWX,GAAIqB,EAAAA,GAAf,oBACA,UAAC,IAAD,CAAYrB,GAAIsB,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBtB,GAAIuB,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIO,EAAAA,IAASL,MAAM,uBAE3B,SAAC,EAAAC,EAAD,CACEC,QAAQ,SACRC,KAAK,QACLxB,KAAK,QACLQ,MAAON,EACPuB,SAAUnB,WAKhB,UAAC,KAAD,YACE,SAAC,IAAD,CAAWX,GAAIqB,EAAAA,GAAf,wBACA,UAAC,IAAD,CAAYrB,GAAIsB,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBtB,GAAIuB,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIQ,EAAAA,IAAoBN,MAAM,uBAEtC,SAAC,EAAAC,EAAD,CACEC,QAAQ,SACRC,KAAK,WACLxB,KAAK,WACLQ,MAAOJ,EACPqB,SAAUnB,WAIhB,UAAC,IAAD,CAAMX,GAAIiC,EAAAA,GAAV,WAAoB,SAAC,KAAD,CAAMC,GAAG,SAAT,oBAApB,uCAEA,SAAC,IAAD,CAAQN,QAAQ,QAAQC,KAAK,SAA7B,0BAML,ECpGD,MANA,WACI,OACI,SAAC,EAAD,GAEP,C","sources":["components/MainContainer/MainContainer.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Container } from \"@chakra-ui/react\";\nimport { container } from \"theme\";\n\nfunction MainContainer({children}) {\n    return (\n        <Container sx={container}>{children}</Container>\n    )\n}\n\nexport default MainContainer;","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { registerAsync } from 'redax/auth/authOperations';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Text,\n} from '@chakra-ui/react';\nimport { MdEmail } from 'react-icons/md';\nimport { formHeader, formLabel, hoverIcon, inputLeftEl, textForm } from 'theme';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport MainContainer from 'components/MainContainer/MainContainer';\n\nfunction RegisterForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(registerAsync({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <MainContainer>\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Heading sx={formHeader}>Register</Heading>\n      <FormControl>\n        <FormLabel sx={formLabel}>Name</FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={BsFillPersonFill} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </FormControl>\n      \n      <FormControl>\n        <FormLabel sx={formLabel}>Email</FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={MdEmail} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </FormControl>\n\n      <FormControl>\n        <FormLabel sx={formLabel}>Password </FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={RiLockPasswordFill} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </FormControl>\n      <Text sx={textForm}><Link to=\"/login\">Log in</Link> if you already have an account.</Text>\n\n      <Button variant=\"myBtn\" type=\"submit\">\n        Register\n      </Button>\n      </form>\n      </MainContainer>\n  );\n}\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm/RegisterForm\"\n\nfunction Register() {\n    return (\n        <RegisterForm/>\n    )\n}\n\nexport default Register;"],"names":["children","sx","container","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","MainContainer","onSubmit","event","preventDefault","registerAsync","autoComplete","formHeader","formLabel","hoverIcon","inputLeftEl","as","BsFillPersonFill","color","I","variant","type","onChange","MdEmail","RiLockPasswordFill","textForm","to"],"sourceRoot":""}