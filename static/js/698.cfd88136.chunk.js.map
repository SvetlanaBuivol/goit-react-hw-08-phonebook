{"version":3,"file":"static/js/698.cfd88136.chunk.js","mappings":"gUAWIA,GAAUC,EAAAA,EAAAA,IAAW,SAAkBC,EAAOC,GAC9C,IAAIC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAtB,EAAQC,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IADwB,gBAGtBP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,iBAAkBT,EAAMM,YACnCD,GALmB,IAMtB,MAAOH,IAGZ,IACDJ,EAAQ,YAAc,U,kHCgFtB,MAtFA,WACE,IAAMY,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAWD,OACE,kBAAMC,SAVa,SAAAC,GACnBA,EAAMC,iBAENd,GAASe,EAAAA,EAAAA,IAAc,CAAEZ,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACtCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAG+BQ,aAAa,MAA3C,WACE,SAACnB,EAAD,CAASoB,MAAM,kBAAkBC,GAAG,MAApC,4BACA,UAAC,KAAD,YACE,SAAC,IAAD,CAAWC,GAAIC,EAAAA,GAAf,mBACA,UAAC,IAAD,CAAYD,GAAIE,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBF,GAAIG,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIC,EAAAA,IAAkBP,MAAM,uBAEpC,SAAC,EAAAQ,EAAD,CACEC,QAAQ,SACRC,KAAK,OACLxB,KAAK,OACLQ,MAAOR,EACPyB,SAAUnB,WAKhB,UAAC,KAAD,YACE,SAAC,IAAD,CAAWU,GAAIC,EAAAA,GAAf,oBACA,UAAC,IAAD,CAAYD,GAAIE,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBF,GAAIG,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIM,EAAAA,IAASZ,MAAM,uBAE3B,SAAC,EAAAQ,EAAD,CACEC,QAAQ,SACRC,KAAK,QACLxB,KAAK,QACLQ,MAAON,EACPuB,SAAUnB,WAKhB,UAAC,KAAD,YACE,SAAC,IAAD,CAAWU,GAAIC,EAAAA,GAAf,wBACA,UAAC,IAAD,CAAYD,GAAIE,EAAAA,GAAhB,WACE,SAAC,IAAD,CAAkBF,GAAIG,EAAAA,GAAtB,UACE,SAAC,IAAD,CAAMC,GAAIO,EAAAA,IAAoBb,MAAM,uBAEtC,SAAC,EAAAQ,EAAD,CACEC,QAAQ,SACRC,KAAK,WACLxB,KAAK,WACLQ,MAAOJ,EACPqB,SAAUnB,WAKhB,SAAC,IAAD,CAAQiB,QAAQ,QAAQC,KAAK,SAA7B,wBAKL,EC9FD,MANA,WACI,OACI,SAAC,EAAD,GAEP,C","sources":["../node_modules/@chakra-ui/layout/src/heading.tsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { registerAsync } from 'redax/auth/authOperations';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n} from '@chakra-ui/react';\nimport { MdEmail } from 'react-icons/md';\nimport { formLabel, hoverIcon, inputLeftEl } from 'theme';\nimport { RiLockPasswordFill } from 'react-icons/ri';\nimport { BsFillPersonFill } from 'react-icons/bs';\n\nfunction RegisterForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    dispatch(registerAsync({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Heading color='customColor.500' mb='8px'>Register form</Heading>\n      <FormControl>\n        <FormLabel sx={formLabel}>Name</FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={BsFillPersonFill} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </FormControl>\n      \n      <FormControl>\n        <FormLabel sx={formLabel}>Email</FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={MdEmail} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </FormControl>\n\n      <FormControl>\n        <FormLabel sx={formLabel}>Password </FormLabel>\n        <InputGroup sx={hoverIcon}>\n          <InputLeftElement sx={inputLeftEl}>\n            <Icon as={RiLockPasswordFill} color=\"customColor.200\" />\n          </InputLeftElement>\n          <Input\n            variant=\"filled\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </InputGroup>\n      </FormControl>\n\n      <Button variant=\"myBtn\" type=\"submit\">\n        Register\n      </Button>\n    </form>\n  );\n}\n\nexport default RegisterForm;\n","import RegisterForm from \"components/RegisterForm/RegisterForm\"\n\nfunction Register() {\n    return (\n        <RegisterForm/>\n    )\n}\n\nexport default Register;"],"names":["props","forwardRef","styles","className","rest","useStyleConfig","omitThemingProps","__css","h2","Heading","chakra","cx","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","event","preventDefault","registerAsync","autoComplete","color","mb","sx","formLabel","hoverIcon","inputLeftEl","as","BsFillPersonFill","I","variant","type","onChange","MdEmail","RiLockPasswordFill"],"sourceRoot":""}